{"remainingRequest":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\src\\views\\personal\\qingshan1.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\src\\views\\personal\\qingshan1.vue","mtime":1658367490887},{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgY3lBcHBseTEgZnJvbSAiLi9jb21wb25lbnRzL2N5QXBwbHkxLnZ1ZSI7DQovLyBpbXBvcnQgY3lBcHBseTIgZnJvbSAiLi9jb21wb25lbnRzL2N5QXBwbHkyLnZ1ZSI7DQovLyBpbXBvcnQgY3lBcHBseTMgZnJvbSAiLi9jb21wb25lbnRzL2N5QXBwbHkzLnZ1ZSI7DQppbXBvcnQgeyBwZXJzb25hbEluZm8sIGdldFRhbGVudERhdGEsIHNhdmVDWUxKIH0gZnJvbSAiQC9hcGkvcGVyc29uYWwiOw0KaW1wb3J0IHsgZ2V0Q29tcGFueSB9IGZyb20gIkAvYXBpL3FpbmdTaGFuZyI7DQppbXBvcnQgeyBnZXRJZCB9IGZyb20gIkAvdXRpbHMvYXV0aCI7DQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOw0KaW1wb3J0IGhlYWQgZnJvbSAnQC9hc3NldHMvaW1ncy9oZWFkLmpwZyc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogeyBjeUFwcGx5MX0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGN1clRhYjogMiwNCiAgICAgIGZvcm06IHsNCiAgICAgICAgbmFtZTogIiIsDQogICAgICAgIGdlbmRlcjogIiIsDQogICAgICAgIGJpcnRoRGF0ZTogIiIsDQogICAgICAgIG5hdGlvbmFsaXR5OiAiIiwNCiAgICAgICAgcG9saXRpYzogIiIsDQogICAgICAgIC8vIHRlbGVwaG9uZTogIiIsDQogICAgICAgIGlkVHlwZTogIiIsDQogICAgICAgIGlkVHlwZVRleHQ6ICIiLA0KICAgICAgICBpZENvZGU6ICIiLA0KICAgICAgICBlZHVjYXRpb246ICIiLA0KICAgICAgICBkZWdyZWU6ICIiLA0KICAgICAgICBzY2hvb2w6ICIiLA0KICAgICAgICBncmFkdWF0aW9uRGF0ZTogIiIsDQogICAgICAgIG1ham9yOiAiIiwNCiAgICAgICAgdGVjaG5pY2FsUG9zaXRpb246ICIiLA0KICAgICAgICBzb2NpYWxQb3NpdGlvbjogIuaXoCIsDQogICAgICAgIHNvY2lhbFBvc2l0aW9uVGV4dDogIiIsDQogICAgICAgIG1vYmlsZTogIiIsDQogICAgICAgIGVtYWlsOiAiIiwNCiAgICAgICAgY29tcGFueTogIiIsDQogICAgICAgIGNvbXBhbnlBZGRyZXNzOiAiIiwNCiAgICAgICAgY29tcGFueVRlbDogIiIsDQogICAgICAgIGNvbXBhbnlGYXg6ICIiLA0KICAgICAgICBwb3N0OiAiIiwNCiAgICAgICAgZWR1Y2F0aW9uYWxFeHBlcmllbmNlOiAiIiwNCiAgICAgICAgd29ya0V4cGVyaWVuY2U6ICIiLA0KICAgICAgICBwcm9qZWN0OiAiIiwNCiAgICAgICAgY29udHJpYjogIiIsDQogICAgICAgIGhvdXNlaG9sZFJlZ2lzdGVyTmFtZTogIiIsDQogICAgICAgIGRpcGxvbWFOYW1lOiAiIiwNCiAgICAgICAgZGVncmVlQ2VydGlmaWNhdGVOYW1lOiAiIiwNCiAgICAgICAgdmVyaWZpY2F0aW9uUmVwb3J0TmFtZTogIiIsDQogICAgICAgIHBlcmZvcm1hbmNlQ2VydGlmaWNhdGlvbk5hbWU6ICIiLA0KICAgICAgICBsYWJvckNvbnRyYWN0TmFtZTogIiIsDQogICAgICAgIHBvc3ROYXR1cmU6ICIiLA0KICAgICAgICBhcHBvaW50bWVudDogIiIsDQogICAgICAgIGN1cnJlbnRQb3N0RGF0ZTogIiIsDQogICAgICAgIGluZHVzdHJ5OiAiIiwNCiAgICAgICAgaGFzT3RoZXJBZ3JlZW1lbnQ6IGZhbHNlLA0KICAgICAgICBvdGhlckFncmVlbWVudDogIiIsDQoNCiAgICAgICAgdGVjaFRpdGxlRGF0ZTogJycsDQogICAgICAgIHRlY2hUaXRsZTogJycsDQogICAgICAgIHJlcHJlc2VudDogJycsDQogICAgICAgIHJlZ2lzdGVyRGF0ZTogJycsDQogICAgICAgIHJlZ2lzdGVyQ2FwaXRhbDogJycsDQogICAgICAgIHN0cnVjdDogJycsDQogICAgICAgIGlzT25zYWxlOiAnJywNCiAgICAgICAgaXNIaWdoVGVjaDogJycsDQogICAgICAgIGNvbXBNYWpvcjogJycsDQogICAgICAgIHBsYW5Db3VudDogJycsDQoNCiAgICAgICAgYWdvU2FsZTogIiIsDQogICAgICAgIGJsYXN0U2FsZTogIiIsDQogICAgICAgIGxhc3RTYWxlOiAiIiwNCiAgICAgICAgYWdvUHJvZml0OiAiIiwNCiAgICAgICAgYmxhc3RQcm9maXQ6ICIiLA0KICAgICAgICBsYXN0UHJvZml0OiAiIiwNCiAgICAgICAgYWdvRGV2OiAiIiwNCiAgICAgICAgYmxhc3REZXY6ICIiLA0KICAgICAgICBsYXN0RGV2OiAiIiwNCiAgICAgICAgYWdvVGF4OiAiIiwNCiAgICAgICAgYmxhc3RUYXg6ICIiLA0KICAgICAgICBsYXN0VGF4OiAiIiwNCiAgICAgICAgYmxhc3RPdGhlcnM6ICIiLA0KICAgICAgICBsYXN0T3RoZXJzOiAiIiwNCiAgICAgICAgYWdvT3RoZXJzOiAiIiwNCiAgICAgICAgdG90YWxDb3VudDogIiIsDQogICAgICAgIHJlZ3VsYXJDb3VudDogIiIsDQogICAgICAgIG1hc3RlckNvdW50OiAiIiwNCiAgICAgICAgZG9jdG9yQ291bnQ6ICIiLA0KICAgICAgICBhYnJvYWRDb3VudDogIiIsDQogICAgICAgIGFJbnZlc3Q6ICIiLA0KICAgICAgICB0ZWFtOiAiIiwNCg0KICAgICAgICBtZW1vOiAiIiwNCiAgICAgICAgaWRlYTogIiIsDQogICAgICAgIGNvbXBhbnlJZDogIiIsDQogICAgICB9LA0KICAgICAgLy8g5aS05YOPDQogICAgICBoZWFkZXI6IGhlYWQsDQogICAgICBwZXJzb25JbWdEYXRhOiBudWxsLA0KDQogICAgICBydWxlczogew0KICAgICAgICBuYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgZ2VuZGVyOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+mAieaLqSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgYmlydGhEYXRlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+mAieaLqSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgaXNPbnNhbGU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36YCJ5oupIiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICBpc0hpZ2hUZWNoOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+mAieaLqSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgbmF0aW9uYWxpdHk6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXSwNCiAgICAgICAgcG9saXRpYzogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIHRlbGVwaG9uZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGlkVHlwZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fpgInmi6kiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGlkQ29kZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGVkdWNhdGlvbjogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGRlZ3JlZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIHNjaG9vbDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGdyYWR1YXRpb25EYXRlOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9DQogICAgICAgIF0sDQogICAgICAgIG1ham9yOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgdGVjaG5pY2FsUG9zaXRpb246IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXSwNCiAgICAgICAgc29jaWFsUG9zaXRpb246IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXSwNCiAgICAgICAgbW9iaWxlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgZW1haWw6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICAvLyBjb21wYW55OiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgLy8gY29tcGFueUFkZHJlc3M6IFsNCiAgICAgICAgLy8gICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgLy8gXSwNCiAgICAgICAgLy8gY29tcGFueVRlbDogWw0KICAgICAgICAvLyAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfQ0KICAgICAgICAvLyBdLA0KICAgICAgICBwb3N0OiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgZWR1Y2F0aW9uYWxFeHBlcmllbmNlOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9DQogICAgICAgIF0sDQogICAgICAgIGNvbnRyaWI6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICBwb3N0TmF0dXJlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgYXBwb2ludG1lbnQ6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICBjdXJyZW50UG9zdERhdGU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICBpbmR1c3RyeTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGhhc090aGVyQWdyZWVtZW50OiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9XSwNCiAgICAgICAgdGVjaFRpdGxlRGF0ZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIHRlY2hUaXRsZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIHJlcHJlc2VudDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIHJlZ2lzdGVyRGF0ZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIHJlZ2lzdGVyQ2FwaXRhbDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIGNvbXBNYWpvcjogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIHBsYW5Db3VudDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIC8vIHRvdGFsQ291bnQ6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65IiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICB3b3JrRXhwZXJpZW5jZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXlhoXlrrkiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQoNCiAgICAgICAgaG91c2Vob2xkUmVnaXN0ZXJOYW1lOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+S4iuS8oOi1hOaWmSIsIHRyaWdnZXI6ICJibHVyIiB9DQogICAgICAgIF0sDQogICAgICAgIGRpcGxvbWFOYW1lOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+S4iuS8oOi1hOaWmSIsIHRyaWdnZXI6ICJibHVyIiB9DQogICAgICAgIF0sDQogICAgICAgIGRlZ3JlZUNlcnRpZmljYXRlTmFtZTogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fkuIrkvKDotYTmlpkiLCB0cmlnZ2VyOiAiYmx1ciIgfQ0KICAgICAgICBdLA0KICAgICAgICB2ZXJpZmljYXRpb25SZXBvcnROYW1lOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+S4iuS8oOi1hOaWmSIsIHRyaWdnZXI6ICJibHVyIiB9DQogICAgICAgIF0sDQogICAgICAgIHBlcmZvcm1hbmNlQ2VydGlmaWNhdGlvbk5hbWU6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+35LiK5Lyg6LWE5paZIiwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXSwNCiAgICAgICAgbGFib3JDb250cmFjdE5hbWU6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+35LiK5Lyg6LWE5paZIiwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXQ0KICAgICAgfSwNCg0KICAgICAgYXR0YWNobWVudFJlcURUT1M6IG51bGwsDQoNCiAgICAgIGRlbEFycjogW10sIC8vIOmZhOS7tuacieiiq+abv+aNoiBpZA0KDQogICAgICBzdGF0dXM6ICcnLCAvLyDmjInpkq7nirbmgIENCiAgICB9Ow0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMucXVlcnlEYXRhKCk7DQoNCiAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnBlcnNvbmFsSW5mbywgdGhpcy51c2VySW5mbyk7DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwU3RhdGUoWyJwZXJzb25hbEluZm8iLCAidXNlckluZm8iXSksDQogICAgdGl0bGUoKSB7DQogICAgICByZXR1cm4gdGhpcy4kcm91dGUucXVlcnkudGl0bGU7DQogICAgfSwNCiAgICAvLyDpgJrov4flk6rkuKrooYzmlL/nuqfliKvov4fmnaXnmoQg5YyF5ZCrICDln47luIItY2l0ee+8jOWMuuWOvy1hcmVhDQogICAgLy8gbGV2ZWwoKSB7DQogICAgLy8gICByZXR1cm4gdGhpcy4kcm91dGUucGFyYW1zLmxldmVsIHx8ICJhcmVhIjsNCiAgICAvLyB9DQogICAgYnRuRGlzKCkgew0KICAgICAgaWYoIXRoaXMuJHJvdXRlLnF1ZXJ5LnRhbGVudElkKSB7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfWVsc2UgaWYodGhpcy5zdGF0dXMgPT0gMCB8fCB0aGlzLnN0YXR1cyA9PSAxMDQpIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHF1ZXJ5RGF0YSgpIHsNCiAgICAgIC8vIGxldCBpZCA9ICcwYjUxMTJmMS1lOGU0LTRkNjQtYmM0OS0zMzIwYzc5ZjM4MGInDQogICAgICBsZXQgaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS50YWxlbnRJZA0KICAgICAgaWYoIWlkKSB7DQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMpOw0KICAgICAgICBsZXQgZiA9IHRoaXMuZm9ybQ0KICAgICAgICANCiAgICAgICAgZi5uYW1lID0gdGhpcy51c2VySW5mby5uYW1lDQogICAgICAgIGYuZ2VuZGVyID0gdGhpcy51c2VySW5mby5nZW5kZXINCiAgICAgICAgZi5tb2JpbGUgPSB0aGlzLnVzZXJJbmZvLm1vYmlsZQ0KICAgICAgICBsZXQgaWRUeXBlID0gdGhpcy51c2VySW5mby5pZFR5cGUNCiAgICAgICAgZi5pZFR5cGUgPSBpZFR5cGUgPT0gMCA/ICfouqvku73or4EnIDogaWRUeXBlID09IDMgPyAn5oqk54WnJyA6ICflhbbku5YnDQogICAgICAgIGYuaWRDb2RlID0gdGhpcy51c2VySW5mby5pZE51bWJlcg0KDQogICAgICAgIGYuY29tcGFueSA9ICB0aGlzLiRyb3V0ZS5xdWVyeS5jb21wYW55TmFtZQ0KICAgICAgICBmLmNvbXBhbnlJZCA9ICB0aGlzLiRyb3V0ZS5xdWVyeS5jb21wYW55SWQNCg0KICAgICAgICAvLyDlhazlj7jkv6Hmga8NCiAgICAgICAgZ2V0Q29tcGFueSh7DQogICAgICAgICAgaWROdW1iZXI6IHRoaXMudXNlckluZm8uaWROdW1iZXINCiAgICAgICAgfSkudGhlbihyZXMgPT4gew0KICAgICAgICAgIGlmKHJlcz8uY29kZSA9PSAyMDApIHsNCiAgICAgICAgICAgIGxldCBjID0gcmVzLmRhdGENCiAgICAgICAgICAgIGYuY29tcG9ueU5hbWUgPSAgYy5uYW1lDQogICAgICAgICAgICBmLmNvbXBhbnlBZGRyZXNzID0gIGMuYWRkcmVzcw0KICAgICAgICAgICAgZi5jb21wYW55VGVsID0gIGMucGhvbmUNCiAgICAgICAgICAgIGYuY29tcGFueUZheCA9ICBjLmZheA0KICAgICAgICAgICAgZi5jb21wYW55SWQgPSAgYy5pZA0KICAgICAgICAgICAgZi5yZXByZXNlbnQgPSAgYy5yZXByZXNlbnQNCiAgICAgICAgICAgIGYucmVnaXN0ZXJEYXRlID0gIGMucmVnaXN0ZXJEYXRlDQogICAgICAgICAgICBmLnJlZ2lzdGVyQ2FwaXRhbCA9ICBjLnJlZ2lzdGVyQ2FwaXRhbCB8fCAwDQogICAgICAgICAgICBmLnN0cnVjdCA9ICBjLnN0cnVjdA0KICAgICAgICAgICAgZi5pc09uc2FsZSA9ICBjLmlzT25zYWxlID8gJ3RydWUnIDogJ2ZhbHNlJw0KICAgICAgICAgICAgZi5pc0hpZ2hUZWNoID0gIGMuaXNIaWdoVGVjaCA/ICd0cnVlJyA6ICdmYWxzZScNCiAgICAgICAgICAgIGYuY29tcE1ham9yID0gIGMubWFqb3INCg0KICAgICAgICAgICAgZi5hZ29TYWxlID0gIGMuYWdvU2FsZSB8fCAwDQogICAgICAgICAgICBmLmJsYXN0U2FsZSA9ICBjLmJsYXN0U2FsZSB8fCAwDQogICAgICAgICAgICBmLmxhc3RTYWxlID0gIGMubGFzdFNhbGUgfHwgMA0KICAgICAgICAgICAgZi5hZ29Qcm9maXQgPSAgYy5hZ29Qcm9maXQgfHwgMA0KICAgICAgICAgICAgZi5ibGFzdFByb2ZpdCA9ICBjLmJsYXN0UHJvZml0IHx8IDANCiAgICAgICAgICAgIGYubGFzdFByb2ZpdCA9ICBjLmxhc3RQcm9maXQgfHwgMA0KICAgICAgICAgICAgZi5hZ29EZXYgPSAgYy5hZ29EZXYgfHwgMA0KICAgICAgICAgICAgZi5ibGFzdERldiA9ICBjLmJsYXN0RGV2IHx8IDANCiAgICAgICAgICAgIGYubGFzdERldiA9ICBjLmxhc3REZXYgfHwgMA0KICAgICAgICAgICAgZi5hZ29UYXggPSAgYy5hZ29UYXggfHwgMA0KICAgICAgICAgICAgZi5ibGFzdFRheCA9ICBjLmJsYXN0VGF4IHx8IDANCiAgICAgICAgICAgIGYubGFzdFRheCA9ICBjLmxhc3RUYXggfHwgMA0KICAgICAgICAgICAgZi5ibGFzdE90aGVycyA9ICBjLmJsYXN0T3RoZXJzIHx8IDANCiAgICAgICAgICAgIGYubGFzdE90aGVycyA9ICBjLmxhc3RPdGhlcnMgfHwgMA0KICAgICAgICAgICAgZi5hZ29PdGhlcnMgPSAgYy5hZ29PdGhlcnMgfHwgMA0KICAgICAgICAgICAgZi50b3RhbENvdW50ID0gIGMudG90YWxDb3VudCB8fCAwDQogICAgICAgICAgICBmLnJlZ3VsYXJDb3VudCA9ICBjLnJlZ3VsYXJDb3VudCB8fCAwDQogICAgICAgICAgICBmLm1hc3RlckNvdW50ID0gIGMubWFzdGVyQ291bnQgfHwgMA0KICAgICAgICAgICAgZi5kb2N0b3JDb3VudCA9ICBjLmRvY3RvckNvdW50IHx8IDANCiAgICAgICAgICAgIGYuYWJyb2FkQ291bnQgPSAgYy5hYnJvYWRDb3VudCB8fCAwDQogICAgICAgICAgICBmLmFJbnZlc3QgPSAgYy5hSW52ZXN0DQogICAgICAgICAgICBmLnRlYW0gPSAgYy50ZWFtDQogICAgICAgICAgICBmLm1lbW8gPSAgYy5tZW1vDQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KDQogICAgICAgIHJldHVybiANCiAgICAgIH0NCiAgICAgIGxldCBpdGVtID0gImdldERpc3RyaWN0LyI7DQogICAgICAvLyBpZiAodGhpcy5sZXZlbCA9PSAiYXJlYSIpIHsNCiAgICAgIC8vICAgaXRlbSA9ICJnZXREaXN0cmljdC8iOw0KICAgICAgLy8gfQ0KICAgICAgbGV0IHVybCA9IGBnYXRld2F5L3RhbGVudHNlcnZlci90YWxlbnQvYCArIGl0ZW0gKyBpZDsNCiAgICAgIGdldFRhbGVudERhdGEodXJsKS50aGVuKHJlcyA9PiB7DQogICAgICAgIGxldCBkID0gcmVzLmRhdGE7DQogICAgICAgIGxldCBmID0gdGhpcy5mb3JtDQogICAgICAgIGYubmFtZSA9IHRoaXMudXNlckluZm8ubmFtZQ0KICAgICAgICBmLmdlbmRlciA9IHRoaXMudXNlckluZm8uZ2VuZGVyIHx8ICdtYWxlJw0KICAgICAgICBmLm1vYmlsZSA9IHRoaXMudXNlckluZm8ubW9iaWxlDQogICAgICAgIGYuaWRUeXBlID0gdGhpcy51c2VySW5mby5pZFR5cGUgfHwgJ+i6q+S7veivgScNCiAgICAgICAgZi5pZENvZGUgPSB0aGlzLnVzZXJJbmZvLmlkTnVtYmVyDQoNCiAgICAgICAgdGhpcy5kZWxBcnIgPSBbXQ0KICAgICAgICBpZiAoZCkgew0KICAgICAgICAgIHRoaXMuc291cmNlRGF0YSA9IGQ7DQogICAgICAgICAgbGV0IGF0dGFjaG1lbnRSZXFEVE9TID0gZC5hdHRhY2htZW50UmVxRFRPUzsNCg0KDQogICAgICAgICAgZi5uYW1lID0gZC5uYW1lIHx8IHRoaXMudXNlckluZm8ubmFtZQ0KICAgICAgICAgIGYuZ2VuZGVyID0gZC5nZW5kZXIgfHwgdGhpcy51c2VySW5mby5nZW5kZXIgfHwgJ21hbGUnDQogICAgICAgICAgZi5tb2JpbGUgPSBkLm1vYmlsZSB8fCB0aGlzLnVzZXJJbmZvLm1vYmlsZQ0KICAgICAgICAgIC8vIGYuaWRUeXBlID0gZC5pZFR5cGUgfHwgdGhpcy51c2VySW5mby5pZFR5cGUgfHwgJ+i6q+S7veivgScNCiAgICAgICAgICBmLmlkQ29kZSA9IGQuaWROdW1iZXIgfHwgdGhpcy51c2VySW5mby5pZE51bWJlcg0KICAgICAgICAgIGYuaWRUeXBlID0gZC5pZE5hbWUgPT0gJ+i6q+S7veivgScgfHwgZC5pZE5hbWUgPT0gJ+aKpOeFpycgPyBkLmlkTmFtZSA6ICflhbbku5YnDQogICAgICAgICAgZi5pZFR5cGVUZXh0ID0gZi5pZFR5cGUgPT0gJ+i6q+S7veivgScgfHwgZi5pZFR5cGUgPT0gJ+aKpOeFpycgPyAiIiA6IGQuaWROYW1lDQoNCiAgICAgICAgICBmLmJpcnRoRGF0ZSA9ICBkLmJpcnRoZGF5DQogICAgICAgICAgZi5uYXRpb25hbGl0eSA9ICBkLm5hdGlvbmFsaXR5DQogICAgICAgICAgZi5wb2xpdGljID0gIGQucG9saXRpYw0KICAgICAgICAgIC8vIGYuaWRUeXBlVGV4dCA9IGYuaWRUeXBlID09ICflhbbku5YnID8gIGQub3RoZXIgOiAnJw0KICAgICAgICAgIGYuZWR1Y2F0aW9uID0gIGQuZWR1Y2F0aW9uDQogICAgICAgICAgZi5kZWdyZWUgPSAgZC5kZWdyZWUNCiAgICAgICAgICBmLnNjaG9vbCA9ICBkLnNjaG9vbA0KICAgICAgICAgIGYuZ3JhZHVhdGlvbkRhdGUgPSAgZC5ncmFkdWF0aW9uRGF0ZQ0KICAgICAgICAgIGYubWFqb3IgPSAgZC5maWVsZA0KICAgICAgICAgIGYudGVjaG5pY2FsUG9zaXRpb24gPSAgZC50ZWNoUG9zaXRpb24NCiAgICAgICAgICBmLnNvY2lhbFBvc2l0aW9uID0gIGQudGVjaFRpdGxlID09ICfml6AnID8gJ+aXoCcgOiAn5pyJJw0KICAgICAgICAgIGYuc29jaWFsUG9zaXRpb25UZXh0ID0gIGQudGVjaFRpdGxlDQogICAgICAgICAgZi5wb3N0TmF0dXJlID0gIGQucG9zdE5hdHVyZQ0KICAgICAgICAgIGYuYXBwb2ludG1lbnQgPSAgZC5hcHBvaW50bWVudA0KICAgICAgICAgIGYucG9zdCA9ICBkLnBvc3QNCiAgICAgICAgICBmLmN1cnJlbnRQb3N0RGF0ZSA9ICBkLmN1cnJlbnRQb3N0RGF0ZQ0KICAgICAgICAgIGYuaW5kdXN0cnkgPSAgZC5pbmR1c3RyeQ0KICAgICAgICAgIGYuZW1haWwgPSAgZC5lbWFpbA0KICAgICAgICAgIGYudGVjaFRpdGxlRGF0ZSA9ICBkLnRlY2hUaXRsZURhdGUNCiAgICAgICAgICBmLnRlY2hUaXRsZSA9ICBkLnRlY2hUaXRsZQ0KICAgICAgICAgIGYucGxhbkNvdW50ID0gIGQucGxhbkNvdW50DQoNCiAgICAgICAgICAvLyBmLmNvbXBhbnkgPSAgZC5jb21wYW55DQogICAgICAgICAgLy8gZi5jb21wYW55QWRkcmVzcyA9ICBkLmNvbXBhbnlBZGRyZXNzDQogICAgICAgICAgLy8gZi5jb21wYW55VGVsID0gIGQuY29tcGFueVRlbA0KICAgICAgICAgIGYuY29tcGFueSA9ICB0aGlzLiRyb3V0ZS5xdWVyeS5jb21wYW55TmFtZQ0KICAgICAgICAgIGYuY29tcGFueUlkID0gIHRoaXMuJHJvdXRlLnF1ZXJ5LmNvbXBhbnlJZA0KICAgICAgICAgIGxldCBjb21wYW55UmVxRFRPcyA9IGQuY29tcGFueVJlcURUT3MNCiAgICAgICAgICBpZihjb21wYW55UmVxRFRPcyAmJiBjb21wYW55UmVxRFRPcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICBsZXQgYyA9IGNvbXBhbnlSZXFEVE9zWzBdDQogICAgICAgICAgICBmLmNvbXBvbnlOYW1lID0gIGMubmFtZQ0KICAgICAgICAgICAgZi5jb21wYW55QWRkcmVzcyA9ICBjLmFkZHJlc3MNCiAgICAgICAgICAgIGYuY29tcGFueVRlbCA9ICBjLnBob25lDQogICAgICAgICAgICBmLmNvbXBhbnlGYXggPSAgYy5mYXgNCiAgICAgICAgICAgIGYuY29tcGFueUlkID0gIGMuaWQNCiAgICAgICAgICAgIGYucmVwcmVzZW50ID0gIGMucmVwcmVzZW50DQogICAgICAgICAgICBmLnJlZ2lzdGVyRGF0ZSA9ICBjLnJlZ2lzdGVyRGF0ZQ0KICAgICAgICAgICAgZi5yZWdpc3RlckNhcGl0YWwgPSAgYy5yZWdpc3RlckNhcGl0YWwgfHwgMA0KICAgICAgICAgICAgZi5zdHJ1Y3QgPSAgYy5zdHJ1Y3QNCiAgICAgICAgICAgIGYuaXNPbnNhbGUgPSAgYy5pc09uc2FsZSA/ICd0cnVlJyA6ICdmYWxzZScNCiAgICAgICAgICAgIGYuaXNIaWdoVGVjaCA9ICBjLmlzSGlnaFRlY2ggPyAndHJ1ZScgOiAnZmFsc2UnDQogICAgICAgICAgICBmLmNvbXBNYWpvciA9ICBjLm1ham9yDQoNCiAgICAgICAgICAgIGYuYWdvU2FsZSA9ICBjLmFnb1NhbGUgfHwgMA0KICAgICAgICAgICAgZi5ibGFzdFNhbGUgPSAgYy5ibGFzdFNhbGUgfHwgMA0KICAgICAgICAgICAgZi5sYXN0U2FsZSA9ICBjLmxhc3RTYWxlIHx8IDANCiAgICAgICAgICAgIGYuYWdvUHJvZml0ID0gIGMuYWdvUHJvZml0IHx8IDANCiAgICAgICAgICAgIGYuYmxhc3RQcm9maXQgPSAgYy5ibGFzdFByb2ZpdCB8fCAwDQogICAgICAgICAgICBmLmxhc3RQcm9maXQgPSAgYy5sYXN0UHJvZml0IHx8IDANCiAgICAgICAgICAgIGYuYWdvRGV2ID0gIGMuYWdvRGV2IHx8IDANCiAgICAgICAgICAgIGYuYmxhc3REZXYgPSAgYy5ibGFzdERldiB8fCAwDQogICAgICAgICAgICBmLmxhc3REZXYgPSAgYy5sYXN0RGV2IHx8IDANCiAgICAgICAgICAgIGYuYWdvVGF4ID0gIGMuYWdvVGF4IHx8IDANCiAgICAgICAgICAgIGYuYmxhc3RUYXggPSAgYy5ibGFzdFRheCB8fCAwDQogICAgICAgICAgICBmLmxhc3RUYXggPSAgYy5sYXN0VGF4IHx8IDANCiAgICAgICAgICAgIGYuYmxhc3RPdGhlcnMgPSAgYy5ibGFzdE90aGVycyB8fCAwDQogICAgICAgICAgICBmLmxhc3RPdGhlcnMgPSAgYy5sYXN0T3RoZXJzIHx8IDANCiAgICAgICAgICAgIGYuYWdvT3RoZXJzID0gIGMuYWdvT3RoZXJzIHx8IDANCiAgICAgICAgICAgIGYudG90YWxDb3VudCA9ICBjLnRvdGFsQ291bnQgfHwgMA0KICAgICAgICAgICAgZi5yZWd1bGFyQ291bnQgPSAgYy5yZWd1bGFyQ291bnQgfHwgMA0KICAgICAgICAgICAgZi5tYXN0ZXJDb3VudCA9ICBjLm1hc3RlckNvdW50IHx8IDANCiAgICAgICAgICAgIGYuZG9jdG9yQ291bnQgPSAgYy5kb2N0b3JDb3VudCB8fCAwDQogICAgICAgICAgICBmLmFicm9hZENvdW50ID0gIGMuYWJyb2FkQ291bnQgfHwgMA0KICAgICAgICAgICAgZi5hSW52ZXN0ID0gIGMuYUludmVzdA0KICAgICAgICAgICAgZi50ZWFtID0gIGMudGVhbQ0KICAgICAgICAgICAgZi5tZW1vID0gIGMubWVtbw0KICAgICAgIA0KICAgICAgICAgICANCiAgICAgICAgICB9DQoNCiAgICAgICAgICBmLmhhc090aGVyQWdyZWVtZW50ID0gIGQuaGFzT3RoZXJBZ3JlZW1lbnQNCiAgICAgICAgICBmLm90aGVyQWdyZWVtZW50ID0gIGQub3RoZXJBZ3JlZW1lbnQNCg0KICAgICAgICAgIGYuZWR1Y2F0aW9uYWxFeHBlcmllbmNlID0gIGQuZWR1DQogICAgICAgICAgZi53b3JrRXhwZXJpZW5jZSA9ICBkLndvcmsNCiAgICAgICAgICBmLnByb2plY3QgPSAgZC5wcm9qZWN0DQogICAgICAgICAgZi5jb250cmliID0gIGQuY29udHJpYg0KDQogICAgICAgICAgdGhpcy5zdGF0dXMgPSBkLnN0YXR1cw0KDQogICAgICAgICAgaWYoYXR0YWNobWVudFJlcURUT1MpIHsNCiAgICAgICAgICAgIHRoaXMuYXR0YWNobWVudFJlcURUT1MgPSBhdHRhY2htZW50UmVxRFRPUw0KICANCiAgICAgICAgICAgIGxldCBoZWFkQXR0YSA9IGF0dGFjaG1lbnRSZXFEVE9TLmZpbHRlcihlID0+IGUudHlwZSA9PSAnSEVBREVSJykNCiAgICAgICAgICAgIGlmKGhlYWRBdHRhLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgdGhpcy5oZWFkZXIgPSBoZWFkQXR0YVswXS51cmwNCiAgICAgICAgICAgICAgdGhpcy5wZXJzb25JbWdEYXRhID0gaGVhZEF0dGFbMF0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0sDQogICAgc2VsZWN0VGFiKGUpIHsNCiAgICAgIGxldCBrZXkgPSBlLnRhcmdldC5kYXRhc2V0LmtleTsNCiAgICAgIGlmIChrZXkgJiYga2V5ICE9IHRoaXMuY3VyVGFiKSB7DQogICAgICAgIHRoaXMuY3VyVGFiID0ga2V5Ow0KICAgICAgfQ0KICAgIH0sDQogICAgcGVyc29uSW1nQ2hhbmdlKGUpIHsNCiAgICAgIGNvbnN0IGlucHV0ID0gZS50YXJnZXQ7DQogICAgICBjb25zdCBbZmlsZV0gPSBpbnB1dC5maWxlczsNCiAgICAgIHZhciBvRlJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7DQogICAgICBvRlJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOw0KICAgICAgbGV0IHRoYXQgPSB0aGlzOw0KICAgICAgb0ZSZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24ob0ZSZXZlbnQpIHsNCiAgICAgICAgdmFyIHNyYyA9IG9GUmV2ZW50LnRhcmdldC5yZXN1bHQ7DQogICAgICAgIHRoYXQuaGVhZGVyID0gc3JjOw0KICAgICAgfTsNCg0KICAgICAgbGV0IGlkID0gdGhpcy5wZXJzb25JbWdEYXRhICYmIHRoaXMucGVyc29uSW1nRGF0YS5pZA0KICAgICAgaWQgJiYgdGhpcy5kZWxBcnIucHVzaChpZCkNCg0KICAgICAgdGhpcy5wZXJzb25JbWdEYXRhID0gew0KICAgICAgICBmaWxlLA0KICAgICAgICBuYW1lOiBmaWxlLm5hbWUsDQogICAgICAgIHRpbWU6IERhdGUubm93KCkNCiAgICAgIH07DQogICAgfSwNCiAgICBnZXRQYXJhbShvcGVyYXRpb25UeXBlKSB7DQogICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKQ0KICAgICAgLy90ZXN0DQogICAgICAvLyBmb3JtRGF0YS5hcHBlbmQoInVzZXJJZCIsICc1YzgyZjQ3Yy0wNjJmLTRlMTktOTRiZS04OWNiMjZjMjQ1NDcnKTsNCiAgICAgIC8vIGZvcm1EYXRhLmFwcGVuZCgiaWQiLCAnMGI1MTEyZjEtZThlNC00ZDY0LWJjNDktMzMyMGM3OWYzODBiJyk7DQogICAgICAvLyBmb3JtRGF0YS5hcHBlbmQoIm9wZXJhdGlvblR5cGUiLCBvcGVyYXRpb25UeXBlKTsNCiAgICAgIA0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJ1c2VySWQiLCBnZXRJZCgpKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiaWQiLCB0aGlzLiRyb3V0ZS5xdWVyeS50YWxlbnRJZCA/IHRoaXMuJHJvdXRlLnF1ZXJ5LnRhbGVudElkIDogJycpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJvcGVyYXRpb25UeXBlIiwgb3BlcmF0aW9uVHlwZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoInR5cGUiLCB0aGlzLiRyb3V0ZS5xdWVyeS50aXRsZSk7DQoNCiAgICAgIC8vIOWfuuacrOS/oeaBrw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJuYW1lIiwgdGhpcy5mb3JtLm5hbWUpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJnZW5kZXIiLCB0aGlzLmZvcm0uZ2VuZGVyKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgibW9iaWxlIiwgdGhpcy5mb3JtLm1vYmlsZSk7DQogICAgICAvLyBmb3JtRGF0YS5hcHBlbmQoImlkVHlwZSIsIHRoaXMuZm9ybS5pZFR5cGUpOw0KICAgICAgaWYodGhpcy5mb3JtLmlkVHlwZSA9PSAn6Lqr5Lu96K+BJyB8fCB0aGlzLmZvcm0uaWRUeXBlID09ICfmiqTnhacnKSB7DQogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiaWROYW1lIiwgdGhpcy5mb3JtLmlkVHlwZSk7DQogICAgICB9ZWxzZXsNCiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCJpZE5hbWUiLCB0aGlzLmZvcm0uaWRUeXBlVGV4dCB8fCB0aGlzLmZvcm0uaWRUeXBlKTsNCiAgICAgIH0NCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgib3RoZXIiLCB0aGlzLmZvcm0uaWRUeXBlVGV4dCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImlkTnVtYmVyIiwgdGhpcy5mb3JtLmlkQ29kZSk7DQoNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiYmlydGhkYXkiLCB0aGlzLmZvcm0uYmlydGhEYXRlKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgibmF0aW9uYWxpdHkiLCB0aGlzLmZvcm0ubmF0aW9uYWxpdHkpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJwb2xpdGljIiwgdGhpcy5mb3JtLnBvbGl0aWMpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJlZHVjYXRpb24iLCB0aGlzLmZvcm0uZWR1Y2F0aW9uKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZGVncmVlIiwgdGhpcy5mb3JtLmRlZ3JlZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoInNjaG9vbCIsIHRoaXMuZm9ybS5zY2hvb2wpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJncmFkdWF0aW9uRGF0ZSIsIHRoaXMuZm9ybS5ncmFkdWF0aW9uRGF0ZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImZpZWxkIiwgdGhpcy5mb3JtLm1ham9yKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgidGVjaFBvc2l0aW9uIiwgdGhpcy5mb3JtLnRlY2huaWNhbFBvc2l0aW9uKTsNCiAgICAgIC8vIGZvcm1EYXRhLmFwcGVuZCgidGVjaFRpdGxlIiwgdGhpcy5mb3JtLnNvY2lhbFBvc2l0aW9uID09ICfmnIknID8gdGhpcy5mb3JtLnNvY2lhbFBvc2l0aW9uVGV4dCA6IHRoaXMuZm9ybS5zb2NpYWxQb3NpdGlvbik7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoInBvc3ROYXR1cmUiLCB0aGlzLmZvcm0ucG9zdE5hdHVyZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImFwcG9pbnRtZW50IiwgdGhpcy5mb3JtLmFwcG9pbnRtZW50KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgicG9zdCIsIHRoaXMuZm9ybS5wb3N0KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY3VycmVudFBvc3REYXRlIiwgdGhpcy5mb3JtLmN1cnJlbnRQb3N0RGF0ZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImluZHVzdHJ5IiwgdGhpcy5mb3JtLmluZHVzdHJ5KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZW1haWwiLCB0aGlzLmZvcm0uZW1haWwpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJoYXNPdGhlckFncmVlbWVudCIsIHRoaXMuZm9ybS5oYXNPdGhlckFncmVlbWVudCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoIm90aGVyQWdyZWVtZW50IiwgdGhpcy5mb3JtLm90aGVyQWdyZWVtZW50KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZWR1IiwgdGhpcy5mb3JtLmVkdWNhdGlvbmFsRXhwZXJpZW5jZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoIndvcmsiLCB0aGlzLmZvcm0ud29ya0V4cGVyaWVuY2UpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJwcm9qZWN0IiwgdGhpcy5mb3JtLnByb2plY3QpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb250cmliIiwgdGhpcy5mb3JtLmNvbnRyaWIpOw0KDQogICAgICBmb3JtRGF0YS5hcHBlbmQoInRlY2hUaXRsZURhdGUiLCB0aGlzLmZvcm0udGVjaFRpdGxlRGF0ZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoInRlY2hUaXRsZSIsIHRoaXMuZm9ybS50ZWNoVGl0bGUpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJwbGFuQ291bnQiLCB0aGlzLmZvcm0ucGxhbkNvdW50KTsNCg0KICAgICAgLy8g5YWs5Y+4DQogICAgICAvLyBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlOYW1lIiwgdGhpcy5mb3JtLmNvbXBhbnkpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb21wYW55TmFtZSIsIHRoaXMuZm9ybS5jb21wb255TmFtZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmFkZHJlc3MiLCB0aGlzLmZvcm0uY29tcGFueUFkZHJlc3MpOw0KICAgICAgLy8gZm9ybURhdGEuYXBwZW5kKCJjb21wYW55UmVxRFRPc1swXS5uYW1lIiwgdGhpcy5mb3JtLmNvbXBhbnkpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb21wYW55UmVxRFRPc1swXS5uYW1lIiwgdGhpcy5mb3JtLmNvbXBvbnlOYW1lKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uaWQiLCB0aGlzLmZvcm0uY29tcGFueUlkKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0ucmVnaXN0ZXJDYXBpdGFsIiwgdGhpcy5mb3JtLnJlZ2lzdGVyQ2FwaXRhbCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLnJlcHJlc2VudCIsIHRoaXMuZm9ybS5yZXByZXNlbnQpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb21wYW55UmVxRFRPc1swXS5yZWdpc3RlckRhdGUiLCB0aGlzLmZvcm0ucmVnaXN0ZXJEYXRlKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uc3RydWN0IiwgdGhpcy5mb3JtLnN0cnVjdCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmlzT25zYWxlIiwgdGhpcy5mb3JtLmlzT25zYWxlID09ICd0cnVlJyA/IDEgOiAwKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uaXNIaWdoVGVjaCIsIHRoaXMuZm9ybS5pc0hpZ2hUZWNoID09ICd0cnVlJyA/IDEgOiAwKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0ubWFqb3IiLCB0aGlzLmZvcm0uY29tcE1ham9yKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uYWdvU2FsZSIsIHRoaXMuZm9ybS5hZ29TYWxlKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uYmxhc3RTYWxlIiwgdGhpcy5mb3JtLmJsYXN0U2FsZSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmxhc3RTYWxlIiwgdGhpcy5mb3JtLmxhc3RTYWxlKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uYWdvUHJvZml0IiwgdGhpcy5mb3JtLmFnb1Byb2ZpdCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmJsYXN0UHJvZml0IiwgdGhpcy5mb3JtLmJsYXN0UHJvZml0KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0ubGFzdFByb2ZpdCIsIHRoaXMuZm9ybS5sYXN0UHJvZml0KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uYWdvRGV2IiwgdGhpcy5mb3JtLmFnb0Rldik7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmJsYXN0RGV2IiwgdGhpcy5mb3JtLmJsYXN0RGV2KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0ubGFzdERldiIsIHRoaXMuZm9ybS5sYXN0RGV2KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uYWdvVGF4IiwgdGhpcy5mb3JtLmFnb1RheCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmJsYXN0VGF4IiwgdGhpcy5mb3JtLmJsYXN0VGF4KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0ubGFzdFRheCIsIHRoaXMuZm9ybS5sYXN0VGF4KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uYmxhc3RPdGhlcnMiLCB0aGlzLmZvcm0uYmxhc3RPdGhlcnMpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb21wYW55UmVxRFRPc1swXS5sYXN0T3RoZXJzIiwgdGhpcy5mb3JtLmxhc3RPdGhlcnMpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb21wYW55UmVxRFRPc1swXS5hZ29PdGhlcnMiLCB0aGlzLmZvcm0uYWdvT3RoZXJzKTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0udG90YWxDb3VudCIsIHRoaXMuZm9ybS50b3RhbENvdW50KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0ucmVndWxhckNvdW50IiwgdGhpcy5mb3JtLnJlZ3VsYXJDb3VudCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLm1hc3RlckNvdW50IiwgdGhpcy5mb3JtLm1hc3RlckNvdW50KTsNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY29tcGFueVJlcURUT3NbMF0uZG9jdG9yQ291bnQiLCB0aGlzLmZvcm0uZG9jdG9yQ291bnQpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjb21wYW55UmVxRFRPc1swXS5hYnJvYWRDb3VudCIsIHRoaXMuZm9ybS5hYnJvYWRDb3VudCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLmFJbnZlc3QiLCB0aGlzLmZvcm0uYUludmVzdCk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLnRlYW0iLCB0aGlzLmZvcm0udGVhbSk7DQogICAgICBmb3JtRGF0YS5hcHBlbmQoImNvbXBhbnlSZXFEVE9zWzBdLm1lbW8iLCB0aGlzLmZvcm0ubWVtbyk7DQoNCiAgICAgIC8vIOmZhOS7tg0KICAgICAgKHRoaXMucGVyc29uSW1nRGF0YSAmJiAhdGhpcy5wZXJzb25JbWdEYXRhLmlkKSAmJiBmb3JtRGF0YS5hcHBlbmQoImhlYWRlciIsIHRoaXMucGVyc29uSW1nRGF0YS5maWxlKTsNCiAgICAgIGxldCBmb3JtRGF0YTEgPSB0aGlzLiRyZWZzLmF0dGFjaG1lbnRSZWYuZ2V0UGFyYW0oZm9ybURhdGEpDQoNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZGVsZXRlIiwgdGhpcy5kZWxBcnIuam9pbignLCcpKTsNCg0KICAgICAgcmV0dXJuIGZvcm1EYXRhMQ0KICAgIH0sDQogICAgc2F2ZShvcGVyYXRpb25UeXBlKSB7DQogICAgICBjb25zb2xlLmxvZygic2F2ZSIpOw0KICAgICAgbGV0IHBhcmFtID0gdGhpcy5nZXRQYXJhbShvcGVyYXRpb25UeXBlKQ0KDQogICAgICBzYXZlQ1lMSihwYXJhbSkudGhlbihyZXMgPT4gew0KICAgICAgICBpZihyZXMuY29kZSA9PSAyMDApIHsNCiAgICAgICAgICB0aGlzLiRjb25maXJtKCfkv53lrZjmiJDlip8nLCAn5o+Q56S6Jywgew0KICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsDQogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycNCiAgICAgICAgICB9KS50aGVuKCgpID0+IHsNCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCdwZXJzb25hbCcpDQogICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHt9KQ0KICAgICAgICAgIC8vIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5L+d5a2Y5oiQ5YqfJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIHN1Ym1pdChvcGVyYXRpb25UeXBlKSB7DQogICAgICB0aGlzLiRyZWZzLnFqeXhyY1J1bGVGb3JtLnZhbGlkYXRlKHZhbGlkID0+IHsNCiAgICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgICAgdGhpcy4kcmVmcy5hdHRhY2htZW50UmVmLmNoZWNrKCkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3Igc3VibWl0ISEiKTsNCiAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0sDQogICAgc2V0RGVsQXJyKGlkKSB7DQogICAgICB0aGlzLmRlbEFyci5wdXNoKGlkKQ0KICAgIH0sDQogICAgYXR0YWNrQ2hlY2sob3BlcmF0aW9uVHlwZSkgew0KICAgICAgbGV0IHBhcmFtID0gdGhpcy5nZXRQYXJhbShvcGVyYXRpb25UeXBlKQ0KDQogICAgICBzYXZlQ1lMSihwYXJhbSkudGhlbihyZXMgPT4gew0KICAgICAgICBpZihyZXMuY29kZSA9PSAyMDApIHsNCiAgICAgICAgICB0aGlzLiRjb25maXJtKCfmj5DkuqTmiJDlip8nLCAn5o+Q56S6Jywgew0KICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsDQogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycNCiAgICAgICAgICB9KS50aGVuKCgpID0+IHsNCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCdwZXJzb25hbCcpDQogICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHt9KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0NCiAgfQ0KfTsNCg=="},null]}