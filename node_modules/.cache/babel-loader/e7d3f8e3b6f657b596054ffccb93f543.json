{"remainingRequest":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\thread-loader\\dist\\cjs.js!E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\babel-loader\\lib\\index.js!E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\src\\router\\index.js","dependencies":[{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\src\\router\\index.js","mtime":1670222092558},{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work\\2022-07-21人才服务网改造最新\\talent-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}